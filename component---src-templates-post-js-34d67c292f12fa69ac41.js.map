{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/topic/list.js","webpack://gatsby-starter-default/./src/templates/post.js"],"names":["TopicList","render","args","className","this","props","topics","map","topic","index","Link","to","slug","key","title","React","data","Helmet","contentfulPost","image","childImageSharp","G","getImage","style","position","createdOn","length","dangerouslySetInnerHTML","__html","body","childMarkdownRemark","html","isFooter","allContentfulPost","nodes","posts","isArchive"],"mappings":"kPAGqBA,E,6FACjBC,OAAA,SAAOC,GACH,OACI,wBAAMC,UAAU,UACZ,oCAECC,KAAKC,MAAMC,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACnB,gBAAC,EAAAC,KAAD,CAAMP,UAAU,eAAeQ,GAAE,UAAYH,EAAMI,KAAQC,IAAKJ,GAC3DD,EAAMM,Y,GARQC,a,mBC2FvC,EArFqB,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACnB,OACI,gBAAC,IAAD,KACI,gBAACC,EAAA,EAAD,KACI,6BAAQD,EAAKE,eAAeJ,MAA5B,YAGJ,2BAASX,UAAU,QACda,EAAKE,gBAAkBF,EAAKE,eAAeC,OAASH,EAAKE,eAAeC,MAAMC,iBAC3E,gBAAC,EAAAC,EAAD,CAAaF,OAAOG,OAASN,EAAKE,eAAeC,MAAMC,iBAAkBjB,UAAU,iBAAiBoB,MAAO,CACvGC,SAAU,cAIlB,0BAAQrB,UAAU,gBACd,sBAAIA,UAAU,eACTa,EAAKE,eAAeJ,OAGzB,sBAAIX,UAAU,kBACV,mCAAiBa,EAAKE,eAAeO,UAEpCT,GAAQA,EAAKE,gBAAkBF,EAAKE,eAAeZ,QAAUU,EAAKE,eAAeZ,OAAOoB,QACrF,gBAAC1B,EAAD,CAAWM,OAAQU,EAAKE,eAAeZ,WAKnD,2BAASH,UAAU,aAAawB,wBAAyB,CAACC,OAAQZ,EAAKE,eAAeW,KAAKC,oBAAoBC,SAGnH,gBAAC,IAAD,CAASC,UAAU,IAElBhB,GAAQA,EAAKiB,mBAAqBjB,EAAKiB,kBAAkBC,OAASlB,EAAKiB,kBAAkBC,MAAMR,OAAS,GACrG,gBAAC,IAAD,CAAUS,MAAOnB,EAAKiB,kBAAkBC,MAAOE,WAAW","file":"component---src-templates-post-js-34d67c292f12fa69ac41.js","sourcesContent":["import React from \"react\"\nimport {Link} from \"gatsby\";\n\nexport default class TopicList extends React.Component {\n    render(args) {\n        return (\n            <span className=\"topics\">\n                <span> in </span>\n\n                {this.props.topics.map((topic, index) => (\n                    <Link className=\"topics__list\" to={`/topic/${topic.slug}`} key={index}>\n                        {topic.title}\n                    </Link>\n                ))}\n            </span>\n        );\n    }\n}","import React from \"react\"\nimport DefaultTemplate from \"./default\";\nimport {graphql} from \"gatsby\";\nimport { Helmet } from \"react-helmet\"\nimport {Profile} from \"../components/profile/index\";\nimport TopicList from \"../components/topic/list\";\nimport PostList from \"../components/post/list\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nconst BlogTemplate = ({data}) => {\n    return (\n        <DefaultTemplate>\n            <Helmet>\n                <title>{data.contentfulPost.title} | Jvar</title>\n            </Helmet>\n\n            <article className=\"post\">\n                {data.contentfulPost && data.contentfulPost.image && data.contentfulPost.image.childImageSharp && (\n                    <GatsbyImage image={getImage(data.contentfulPost.image.childImageSharp)} className='post__backdrop' style={{\n                        position: 'absolute'\n                    }} />\n                )}\n\n                <header className=\"post__header\">\n                    <h1 className=\"post__title\">\n                        {data.contentfulPost.title}\n                    </h1>\n\n                    <h2 className=\"post__headline\">\n                        <span>On </span>{data.contentfulPost.createdOn}\n\n                        {data && data.contentfulPost && data.contentfulPost.topics && data.contentfulPost.topics.length && (\n                            <TopicList topics={data.contentfulPost.topics} />\n                        )}\n                    </h2>\n                </header>\n\n                <section className=\"post__body\" dangerouslySetInnerHTML={{__html: data.contentfulPost.body.childMarkdownRemark.html}}/>\n            </article>\n\n            <Profile isFooter={true}/>\n\n            {data && data.allContentfulPost && data.allContentfulPost.nodes && data.allContentfulPost.nodes.length > 0 && (\n                <PostList posts={data.allContentfulPost.nodes} isArchive={true} />\n            )}\n\n        </DefaultTemplate>\n    )\n};\n\nexport const pageQuery = graphql`\n  query($id: String!, $topics: [String]!) {\n    contentfulPost(id: { eq: $id }) {\n      title\n      body {\n        childMarkdownRemark {\n          html\n        }\n      }\n      image {\n        childImageSharp {\n          gatsbyImageData(\n            width: 2140\n            height: 450\n            placeholder: BLURRED\n            formats: [AUTO, WEBP]\n          )\n        }\n      }\n      createdOn(formatString: \"MMMM DD, YYYY\")\n      topics {\n        id\n        title\n        slug\n      }\n    }\n    allContentfulPost(filter: {topics: {elemMatch: {id: {in: $topics}}}, id: {ne: $id}}, sort: {fields: createdOn, order: DESC}, limit: 5) {\n            nodes {\n                id\n                title\n                createdOn(formatString: \"MMMM DD, YYYY\")\n                body {\n                  childMarkdownRemark {\n                    html\n                  }\n                }\n                fields {\n                    path\n                }\n            }\n    }\n  }\n`;\n\nexport default BlogTemplate;"],"sourceRoot":""}