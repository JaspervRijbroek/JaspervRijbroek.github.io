{"version":3,"sources":["webpack://gatsby-starter-default/./src/templates/topic.js"],"names":["capitalize","topic","title","split","map","part","charAt","toUpperCase","slice","join","data","contentfulTopic","className","body","childMarkdownRemark","html","dangerouslySetInnerHTML","__html","replace","allContentfulPost","nodes","length","posts","id","isFooter"],"mappings":"iMAOA,SAASA,EAAWC,GAChB,OAAOA,EACFC,MACAC,MAAM,KACNC,KAAI,SAASC,GACV,OAAOA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,MAEpDC,KAAK,KA8Dd,UA3DsB,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACpB,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,KACI,6BAAQV,EAAWU,EAAKC,iBAAxB,YAGJ,uBAAKC,UAAU,QACX,0BAAQA,UAAU,gBACd,sBAAIA,UAAU,eAAeZ,EAAWU,EAAKC,kBAE5CD,EAAKC,gBAAgBE,MAAQH,EAAKC,gBAAgBE,KAAKC,oBAAoBC,MAAS,sBAAIH,UAAU,iBAAiBI,wBAAyB,CAACC,OAAQP,EAAKC,gBAAgBE,KAAKC,oBAAoBC,KAAKG,QAAQ,gBAAiB,SAIzOR,GAAQA,EAAKS,mBAAqBT,EAAKS,kBAAkBC,OAASV,EAAKS,kBAAkBC,MAAMC,OAAS,GACrG,gBAAC,IAAD,CAAUC,MAAOZ,EAAKS,kBAAkBC,QAG3CV,GAAQA,EAAKS,mBAAqBT,EAAKS,kBAAkBC,QAAUV,EAAKS,kBAAkBC,MAAMC,QAC7F,4CAGJ,0BAAQE,GAAG,YAAYX,UAAU,YAC7B,gBAAC,IAAD,CAASY,UAAU","file":"component---src-templates-topic-js-07860fe87a182acf77a1.js","sourcesContent":["import React from \"react\"\nimport DefaultTemplate from \"./default\";\nimport {graphql} from \"gatsby\";\nimport {Profile} from \"../components/profile/index\";\nimport {Helmet} from \"react-helmet\";\nimport PostList from \"../components/post/list\";\n\nfunction capitalize(topic) {\n    return topic\n        .title\n        .split(' ')\n        .map(function(part) {\n            return part.charAt(0).toUpperCase() + part.slice(1);\n        })\n        .join(' ');\n}\n\nconst TopicTemplate = ({data}) => {\n    return (\n        <DefaultTemplate>\n            <Helmet>\n                <title>{capitalize(data.contentfulTopic)} | Jvar</title>\n            </Helmet>\n\n            <div className=\"post\">\n                <header className=\"post__header\">\n                    <h1 className=\"post__title\">{capitalize(data.contentfulTopic)}</h1>\n\n                    {data.contentfulTopic.body && data.contentfulTopic.body.childMarkdownRemark.html && (<h2 className=\"post__headline\" dangerouslySetInnerHTML={{__html: data.contentfulTopic.body.childMarkdownRemark.html.replace(/(<([^>]+)>)/gi, \"\")}} />)}\n                </header>\n            </div>\n\n            {data && data.allContentfulPost && data.allContentfulPost.nodes && data.allContentfulPost.nodes.length > 0 && (\n                <PostList posts={data.allContentfulPost.nodes} />\n            )}\n\n            {data && data.allContentfulPost && data.allContentfulPost.nodes && !data.allContentfulPost.nodes.length && (\n                <p>No posts found!</p>\n            )}\n\n            <footer id=\"post-meta\" className=\"clearfix\">\n                <Profile isFooter={true}/>\n            </footer>\n        </DefaultTemplate>\n    )\n};\n\nexport const pageQuery = graphql`\n  query($topicID: String!) {\n    contentfulTopic(id: {eq: $topicID}) {\n        title\n        slug\n        body {\n          childMarkdownRemark {\n            html\n          }\n        }\n    }\n    allContentfulPost(filter: {topics: {elemMatch: {id: {eq: $topicID}}}}) {\n        nodes {\n          id\n          title\n          createdOn,\n          teaser {\n            childMarkdownRemark {\n              html\n            }\n          }\n          fields {\n            path\n          }\n        }\n      }\n  }\n`;\n\nexport default TopicTemplate;"],"sourceRoot":""}