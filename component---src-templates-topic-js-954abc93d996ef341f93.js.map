{"version":3,"sources":["webpack:///./src/components/post-row.js","webpack:///./src/templates/topic.js"],"names":["PostRow","post","title","frontmatter","to","fields","path","className","date","description","pageQuery","TopicTemplate","data","pageContext","topic","split","map","part","charAt","toUpperCase","slice","join","id","allMarkdownRemark","nodes","length","node","key","isFooter"],"mappings":"2FAAA,qCAceA,IAXC,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACZ,4BACI,kBAAC,OAAD,CAAMC,MAAO,CAACD,EAAKE,YAAYD,OAAQE,GAAIH,EAAKI,OAAOC,MACnD,2BAAOC,UAAU,SAASN,EAAKI,OAAOG,MAErCP,EAAKE,YAAYD,MAClB,4BAAKD,EAAKE,YAAYM,iB,sKCOlC,IA2BaC,EAAS,aAmBPC,UA9CO,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YAC1B,OACI,kBAAC,IAAD,KACI,kBAAC,SAAD,KACI,+BAAmBA,EAAYC,MAXtCC,MAAM,KACNC,KAAI,SAASC,GACV,OAAOA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,MAEpDC,KAAK,KAOE,YAGJ,yBAAKd,UAAU,cACX,4BAAQe,GAAG,UACP,4BAAKT,EAAYC,SAIxBF,GAAQA,EAAKW,mBAAqBX,EAAKW,kBAAkBC,OAASZ,EAAKW,kBAAkBC,MAAMC,QAC5F,wBAAIH,GAAG,aACFV,EAAKW,kBAAkBC,MAAMR,KAAI,SAACU,GAAD,OAC9B,kBAAC,IAAD,CAASC,IAAKD,EAAKJ,GAAIrB,KAAMyB,QAIzC,4BAAQJ,GAAG,YAAYf,UAAU,YAC7B,kBAAC,IAAD,CAASqB,UAAU","file":"component---src-templates-topic-js-954abc93d996ef341f93.js","sourcesContent":["import React from \"react\"\nimport {Link} from 'gatsby'\n\nconst PostRow = ({post}) => (\n    <li>\n        <Link title={[post.frontmatter.title]} to={post.fields.path}>\n            <aside className=\"dates\">{post.fields.date}</aside>\n\n            {post.frontmatter.title}\n            <h2>{post.frontmatter.description}</h2>\n        </Link>\n    </li>\n);\n\nexport default PostRow","import React from \"react\"\nimport DefaultTemplate from \"./default\";\nimport {graphql} from \"gatsby\";\nimport {Profile} from \"../components/profile\";\nimport PostRow from \"../components/post-row\";\nimport {Helmet} from \"react-helmet\";\n\nfunction capitalize(topic) {\n    return topic\n        .split(' ')\n        .map(function(part) {\n            return part.charAt(0).toUpperCase() + part.slice(1);\n        })\n        .join(' ');\n}\n\nconst TopicTemplate = ({data, pageContext}) => {\n    return (\n        <DefaultTemplate>\n            <Helmet>\n                <title>{capitalize(pageContext.topic)} | Jvar</title>\n            </Helmet>\n\n            <div className=\"topic post\">\n                <header id=\"header\">\n                    <h1>{pageContext.topic}</h1>\n                </header>\n            </div>\n\n            {data && data.allMarkdownRemark && data.allMarkdownRemark.nodes && data.allMarkdownRemark.nodes.length && (\n                <ul id=\"post-list\">\n                    {data.allMarkdownRemark.nodes.map((node) => (\n                        <PostRow key={node.id} post={node} />\n                    ))}\n                </ul>\n            )}\n            <footer id=\"post-meta\" className=\"clearfix\">\n                <Profile isFooter={true}/>\n            </footer>\n        </DefaultTemplate>\n    )\n};\n\nexport const pageQuery = graphql`\n  query($topic: String!) {\n    allMarkdownRemark(filter: {frontmatter: {topics: {eq: $topic}}}) {\n        nodes {\n          id\n          fields {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n          }\n          frontmatter {\n            title\n            description\n            topics\n          }\n        }\n      }\n  }\n`;\n\nexport default TopicTemplate;"],"sourceRoot":""}