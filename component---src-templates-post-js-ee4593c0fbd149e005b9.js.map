{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["pageQuery","BlogTemplate","data","markdownRemark","frontmatter","title","className","fields","date","topics","length","map","topic","index","to","key","id","dangerouslySetInnerHTML","__html","html","isFooter","allMarkdownRemark","nodes","node","path"],"mappings":"6FAAA,0HA8DaA,EAAS,aA6BPC,UArFM,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACnB,OACI,kBAAC,IAAD,KACI,kBAAC,SAAD,KACI,+BAAQA,EAAKC,eAAeC,YAAYC,MAAxC,YAGJ,6BAASC,UAAU,QACf,gCACI,4BACKJ,EAAKC,eAAeC,YAAYC,OAGrC,wBAAIC,UAAU,YACV,qCAAiBJ,EAAKC,eAAeI,OAAOC,KAE3CN,EAAKC,eAAeC,aAAeF,EAAKC,eAAeC,YAAYK,QAAUP,EAAKC,eAAeC,YAAYK,OAAOC,QACjH,0BAAMJ,UAAU,UACZ,sCAECJ,EAAKC,eAAeC,YAAYK,OAAOE,KAAI,SAACC,EAAOC,GAAR,OACxC,kBAAC,OAAD,CAAMC,GAAE,UAAYF,EAASG,IAAKF,GAC7BD,SAOzB,6BAASI,GAAG,YAAYC,wBAAyB,CAACC,OAAQhB,EAAKC,eAAegB,SAGlF,4BAAQH,GAAG,YAAYV,UAAU,YAC7B,kBAAC,IAAD,CAASc,UAAU,KAGtBlB,GAAQA,EAAKmB,mBAAqBnB,EAAKmB,kBAAkBC,OAASpB,EAAKmB,kBAAkBC,MAAMZ,OAAS,GACrG,6BACI,8CACA,wBAAIM,GAAG,YAAYV,UAAU,oBACxBJ,EAAKmB,kBAAkBC,MAAMX,KAAI,SAACY,GAAD,OAC9B,wBAAIR,IAAKQ,EAAKP,IACV,kBAAC,OAAD,CAAMF,GAAIS,EAAKhB,OAAOiB,MACjBD,EAAKnB,YAAYC,MAClB,2BAAOC,UAAU,SAASiB,EAAKhB,OAAOC","file":"component---src-templates-post-js-ee4593c0fbd149e005b9.js","sourcesContent":["import React from \"react\"\nimport DefaultTemplate from \"./default\";\nimport {graphql, Link} from \"gatsby\";\nimport {Profile} from \"../components/profile\";\nimport { Helmet } from \"react-helmet\"\n\nconst BlogTemplate = ({data}) => {\n    return (\n        <DefaultTemplate>\n            <Helmet>\n                <title>{data.markdownRemark.frontmatter.title} | Jvar</title>\n            </Helmet>\n\n            <article className=\"post\">\n                <header>\n                    <h1>\n                        {data.markdownRemark.frontmatter.title}\n                    </h1>\n\n                    <h2 className=\"headline\">\n                        <span>On </span>{data.markdownRemark.fields.date}\n\n                        {data.markdownRemark.frontmatter && data.markdownRemark.frontmatter.topics && data.markdownRemark.frontmatter.topics.length && (\n                            <span className=\"topics\">\n                                <span> in </span>\n\n                                {data.markdownRemark.frontmatter.topics.map((topic, index) => (\n                                    <Link to={`/topic/${topic}`} key={index}>\n                                        {topic}\n                                    </Link>\n                                ))}\n                            </span>\n                        )}\n                    </h2>\n                </header>\n                <section id=\"post-body\" dangerouslySetInnerHTML={{__html: data.markdownRemark.html}}/>\n            </article>\n\n            <footer id=\"post-meta\" className=\"clearfix\">\n                <Profile isFooter={true}/>\n            </footer>\n\n            {data && data.allMarkdownRemark && data.allMarkdownRemark.nodes && data.allMarkdownRemark.nodes.length > 0 && (\n                <div>\n                    <h3>More like this</h3>\n                    <ul id=\"post-list\" className=\"archive readmore\">\n                        {data.allMarkdownRemark.nodes.map((node) => (\n                            <li key={node.id}>\n                                <Link to={node.fields.path}>\n                                    {node.frontmatter.title}\n                                    <aside className=\"dates\">{node.fields.date}</aside>\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n\n        </DefaultTemplate>\n    )\n};\n\nexport const pageQuery = graphql`\n  query($path: String!, $topics: [String]!, $id: String!) {\n    markdownRemark(fields: { path: { eq: $path } }) {\n      html\n      fields {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n      }\n      frontmatter {\n        title\n        description\n        topics\n      }\n    }\n    allMarkdownRemark(filter: {frontmatter: {topics: {in: $topics}}, id: {ne: $id}}, sort: {fields: fields___date, order: DESC}) {\n        nodes {\n            id\n            fields {\n                date(formatString: \"MMMM DD, YYYY\")\n                path\n            }\n            frontmatter {\n                title\n            }\n         }\n    }\n  }\n`;\n\nexport default BlogTemplate;"],"sourceRoot":""}